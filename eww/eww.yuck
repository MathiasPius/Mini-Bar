(defwidget bar []
  (box :orientation "vertical"
       :class "bar invisible"
    (box
        :orientation "horizontal"
	(box)
	(box)
	(box
          :class "upper-corner"))
    (box
        :orientation "horizontal"
	:class "invisible"
      (box
          :orientation "vertical"
	(box)
        (box
         :class "left-corner"))
      (children))))

(defwidget workspaces [target-monitor]
  (box :orientation "horizontal"
       :class "workspaces"
       :spacing 10
    (box
      (for tag in '${wmstate.workspaces[target-monitor].tags}'
        (button
          :class {
	    tag.mine    ? "workspace active" :
	    tag.busy    ? "workspace busy" :
	    tag.urgent  ? "workspace urgent" : "workspace"
	  }
	  :onclick "leftwm-command \"SendWorkspaceToTag ${target-monitor} ${tag.index}\""
	  {tag.name})))))

(deflisten wmstate 
           :initial '{"workspaces":[{"layout":"","tags":[{"name":"","index":0,"mine":false,"busy":false,"visible":false,"urgent":false}]}]}'
           "leftwm state")

(defwindow primary [target-monitor]
    :class bar
    :monitor screen
    :windowtype "dock"
    :geometry (geometry
    	:x "0"
	:y "0"
	:height "10px"
	:anchor "bottom right")
  (bar
    (workspaces :target-monitor target-monitor)))

(defwindow secondary [target-monitor]
    :class bar
    :monitor screen
    :windowtype "dock"
    :geometry (geometry
    	:x "0"
	:y "0"
	:height "10px"
	:anchor "bottom right")
  (bar
    (workspaces :target-monitor target-monitor)))
   
