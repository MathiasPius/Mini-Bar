(defpoll time
  :interval "1s"
  :initial-value ""
  `date "+%a %d/%m/%y %H:%M"`)

(defwidget bar []

  (box :orientation "horizontal"
       :class "bar invisible"
       :space-evenly false
      (children)))

(defwidget workspaces [target-monitor]
  (box :orientation "horizontal"
       :class "workspaces"
      (for tag in '${wmstate.workspaces[target-monitor].tags}'
        (button
          :class {
            tag.urgent  ? "workspace urgent" :
	          tag.mine    ? "workspace active" :
      	    tag.busy    ? "workspace busy" : "workspace"
          }
	        :onclick "leftwm-command \"SendWorkspaceToTag ${target-monitor} ${tag.index}\""
      	  {tag.name}))))

(deflisten wmstate 
           :initial '{"workspaces":[{"layout":"","tags":[{"name":"","index":0,"mine":false,"busy":false,"visible":false,"urgent":false}]}]}'
           "leftwm state")

(defwindow p [target-monitor]
    :class "bar"
    :halign center
    :valign center
    :monitor screen
    :windowtype "dock"
    :geometry (geometry
    	:x "0"
    	:y "0"
    	:height "10px"
    	:anchor "bottom center")
  (bar
    (workspaces :target-monitor target-monitor)
    (box :class "time" time)))

(defwindow s [target-monitor]
    :class "bar"
    :halign center
    :valign center
    :monitor screen
    :windowtype "dock"
    :geometry (geometry
    	:x "0"
    	:y "0"
	    :height "10px"
	    :anchor "bottom center")
  (bar
    (workspaces :target-monitor target-monitor)
    (box :class "time" time)))
    

(defwindow tab [target-monitor]
    :class "bar"
    :halign center
    :valign center
    :monitor screen
    :windowtype "dock"
    :geometry (geometry
    	:x "0"
    	:y "0"
    	:height "10px"
    	:anchor "bottom center")
  (bar
    (workspaces :target-monitor target-monitor)
    (box :class "time" time)))